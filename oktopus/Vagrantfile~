# -*- mode: ruby -*-
# vi: set ft=ruby :

# All Vagrant configuration is done below. The "2" in Vagrant.configure
# configures the configuration version (we support older styles for
# backwards compatibility). Please don't change it unless you know what
# you're doing.
Vagrant.require_version ">= 2.2.10"
Vagrant.configure("2") do |config|
  # The most common configuration options are documented and commented below.
  # For a complete reference, please see the online documentation at
  # https://docs.vagrantup.com.

  # Every Vagrant development environment requires a box. You can search for
  # boxes at https://vagrantcloud.com/search.
  # Use any version shown here https://app.vagrantup.com/opensuse/boxes/Leap-15.4.x86_64
  config.vm.box = "generic/opensuse15"
  config.vm.box_download_insecure = true
  config.vm.provision "shell", inline: "echo 'ssh-rsa AAAAB3NzaC1yc2EAAAABJQAAAQEA6PQ3NGukq0oDNDtHVWBD5TGdKAA6wJ29wdWB6aBANpeyOKASCDZ2ntxJRFMW0yEtdyiKYIL0NRiLFhmDVdW064ATm4csuHN9skM/YDMsv9+AlyN70FnzBfi5JssmPvrC24bZyXDyr+1/p+w1BRuVOs6mim8J5uI94H+ZqogU6RbaHJS1hoSnF/cUywLK0FzpujBarhiFvTJT8xZMXtrucHVSymDgOY+ZMps5+k32HEVXIyZyORsLRBSx/9x7+zWzG2GlJLgFY9ThDvUY1MtXGhIzJeWfZvaMXN1qn59hcKqaG7v8LC5kbR86ibCOSLF3Y1Eof+0IOxsR9U1rQB1VQw==' >> /home/vagrant/.ssh/authorized_keys"


  # Disable automatic box update checking. If you disable this, then
  # boxes will only be checked for updates when the user runs
  # `vagrant box outdated`. This is not recommended.
  # config.vm.box_check_update = false

  # Create a forwarded port mapping which allows access to a specific port
  # within the machine from a port on the host machine. In the example below,
  # accessing "localhost:8080" will access port 80 on the guest machine.
  # NOTE: This will enable public access to the opened port
 

  # Create a forwarded port mapping which allows access to a specific port
  # within the machine from a port on the host machine and only allow access
  # via 127.0.0.1 to disable public access
  # config.vm.network "forwarded_port", guest: 80, host: 8080, host_ip: "127.0.0.1"

  # Create a private network, which allows host-only access to the machine
  # using a specific IP.
  config.vm.network "public_network",  ip: "192.168.1.130", bridge: "Intel(R) Ethernet Controller (3) I225-V"
  #config.vm.network "private_network", ip: "172.16.1.2" 
  config.vm.disk :disk, size: "200GB", primary: true
  config.vm.hostname = "oktopusp.rdss.cloud"

  # Create a public network, which generally matched to bridged network.
  # Bridged networks make the machine appear as another physical device on
  # your network.
  # config.vm.network "public_network"

  # Share an additional folder to the guest VM. The first argument is
  # the path on the host to the actual folder. The second argument is
  # the path on the guest to mount the folder. And the optional third
  # argument is a set of non-required options.
  # config.vm.synced_folder "../data", "/vagrant_data"

  # Provider-specific configuration so you can fine-tune various
  # backing providers for Vagrant. These expose provider-specific options.
  # Example for VirtualBox:
  #
  config.vm.provider "virtualbox" do |vb|
  #   # Display the VirtualBox GUI when booting the machine
  #   vb.gui = true
  #
  #   # Customize the amount of memory on the VM:clear

    vb.memory = "4096"
    vb.cpus = 4
    vb.name = "k3s"
  end
  #
  # View the documentation for the provider you are using for more
  # information on available options.

  # Enable provisioning with a shell script. Additional provisioners such as
  # Ansible, Chef, Docker, Puppet and Salt are also available. Please see the
  # documentation for more information about their specific syntax and use.
  config.vm.provision "shell", inline: <<-SHELL
     sudo zypper --non-interactive install apparmor-parser git vim tcpdump docker telnet
  SHELL

  args = []
      config.vm.provision "k3s shell script", type: "shell",
          path: "k3s.sh",
          args: args
end
